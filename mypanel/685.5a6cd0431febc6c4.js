"use strict";(self.webpackChunkopenmediavault_workbench=self.webpackChunkopenmediavault_workbench||[]).push([[685],{3685:(W,y,i)=>{i.r(y),i.d(y,{NetworkModule:()=>O});var k=i(6895),F=i(7455),N=i(9394),S=i(3918),f=i(5166),e=i(8584),h=i(9076),q=i(3642),m=i(7713),n=i(4650),u=i(6316);let b=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Iptables",get:{method:"getRule",params:{uuid:"{{ _routeParams.uuid }}"}},post:{method:"setRule"}},fields:[{type:"confObjUuid"},{type:"hidden",name:"rulenum",value:-1},{type:"select",name:"family",label:(0,e.J)("Family"),disabled:!0,value:"{{ _routeParams.family }}",store:{data:[["inet","IPv4"],["inet6","IPv6"]]},validators:{required:!0}},{type:"select",name:"chain",label:(0,e.J)("Direction"),value:"INPUT",store:{data:[["INPUT","INPUT"],["OUTPUT","OUTPUT"]]},validators:{required:!0}},{type:"select",name:"action",label:(0,e.J)("Action"),hint:(0,e.J)("This specifies what to do if the packet matches."),value:"REJECT",store:{data:[["ACCEPT","ACCEPT"],["REJECT","REJECT"],["DROP","DROP"],["LOG","LOG"],["",(0,e.J)("Nothing")]]},validators:{required:!0}},{type:"textInput",name:"source",label:(0,e.J)("Source"),hint:(0,e.J)('Source address can be either a network IP address (with /mask), a IP range or a plain IP address. A "!" argument before the address specification inverts the sense of the address.'),value:""},{type:"textInput",name:"sport",label:(0,e.J)("Source port"),hint:(0,e.J)("Match if the source port is one of the given ports, e.g. 21 or !443 or 1024-65535."),value:"",validators:{custom:[{constraint:{operator:"if",arg0:{operator:"notEmpty",arg0:{prop:"sport"}},arg1:{operator:"regex",arg0:{prop:"sport"},arg1:"^!?(([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])([-:]([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])){0,1})$"}},errorData:(0,e.J)("This field should be a port or port range (e.g. 21 or !443 or 1024-65535).")}]}},{type:"textInput",name:"destination",label:(0,e.J)("Destination"),hint:(0,e.J)('Destination address can be either a network IP address (with /mask), a IP range or a plain IP address. A "!" argument before the address specification inverts the sense of the address.'),value:""},{type:"textInput",name:"dport",label:(0,e.J)("Destination port"),hint:(0,e.J)("Match if the destination port is one of the given ports, e.g. 21 or !443 or 1024-65535."),value:"",validators:{custom:[{constraint:{operator:"if",arg0:{operator:"notEmpty",arg0:{prop:"dport"}},arg1:{operator:"regex",arg0:{prop:"dport"},arg1:"^!?(([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])([-:]([1-9][0-9]{0,3}|[1-5][0-9]{4}|6[0-4][0-9]{3}|65[0-4][0-9]{2}|655[0-2][0-9]|6553[0-5])){0,1})$"}},errorData:(0,e.J)("This field should be a port or port range (e.g. 21 or !443 or 1024-65535).")}]}},{type:"select",name:"protocol",label:(0,e.J)("Protocol"),value:"tcp",store:{data:[["tcp","TCP"],["udp","UDP"],["icmp","ICMP"],["icmpv6","ICMPv6"],["all",(0,e.J)("All")],["!tcp",(0,e.J)("Not TCP")],["!udp",(0,e.J)("Not UDP")],["!icmp",(0,e.J)("Not ICMP")],["!icmpv6",(0,e.J)("Not ICMPv6")]]},validators:{custom:[{constraint:{operator:"if",arg0:{operator:"or",arg0:{operator:"notEmpty",arg0:{prop:"sport"}},arg1:{operator:"notEmpty",arg0:{prop:"dport"}}},arg1:{operator:"ne",arg0:{prop:"protocol"},arg1:"all"}},errorData:(0,e.J)("The protocol is not supported in conjunction with a source/destination port.")}]}},{type:"textInput",name:"extraoptions",label:(0,e.J)("Extra options"),value:""},{type:"tagInput",name:"comment",label:(0,e.J)("Tags"),value:""}],buttons:[{template:"submit",execute:{type:"url",url:"/network/firewall/rules/{{ _routeParams.family }}"}},{template:"cancel",execute:{type:"url",url:"/network/firewall/rules/{{ _routeParams.family }}"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})();var s=i(7489),J=i(8001),I=i(7161),x=i(2598),g=i(7839);let A=(()=>{class t extends m.qg{constructor(r,a){super(),this.rpcService=r,this.notificationService=a,this.config={stateId:"9cee722c-7c04-11ea-a3e8-37671db9f618",autoReload:!1,limit:0,remoteSorting:!1,remotePaging:!1,hasSearchField:!1,columns:[{name:(0,e.J)("Direction"),prop:"chain",flexGrow:1,sortable:!1,cellTemplateName:"chip"},{name:(0,e.J)("Action"),prop:"action",flexGrow:1,sortable:!1,cellTemplateName:"chip"},{name:(0,e.J)("Source"),prop:"source",flexGrow:1,sortable:!1},{name:(0,e.J)("Port"),prop:"sport",flexGrow:1,sortable:!1},{name:(0,e.J)("Destination"),prop:"destination",flexGrow:1,sortable:!1},{name:(0,e.J)("Port"),prop:"dport",flexGrow:1,sortable:!1},{name:(0,e.J)("Protocol"),prop:"protocol",flexGrow:1,sortable:!1,cellTemplateName:"chip",cellTemplateConfig:{map:{tcp:{value:"TCP"},udp:{value:"UDP"},icmp:{value:"ICMP"},icmpv6:{value:"ICMPv6"},all:{value:(0,e.J)("All")},"!tcp":{value:(0,e.J)("Not TCP")},"!udp":{value:(0,e.J)("Not UDP")},"!icmp":{value:(0,e.J)("Not ICMP")},"!icmpv6":{value:(0,e.J)("Not ICMPv6")}}}},{name:(0,e.J)("Extra options"),prop:"extraoptions",cellTemplateName:"text",flexGrow:1,sortable:!1},{name:(0,e.J)("Tags"),prop:"comment",cellTemplateName:"chip",cellTemplateConfig:{separator:","},flexGrow:1,sortable:!0}],sorters:[{dir:"asc",prop:"rulenum"}],store:{proxy:{service:"Iptables",get:{method:"getRules",params:{type:["userdefined"]}}}},actions:[{type:"iconButton",icon:"save",tooltip:(0,e.J)("Save"),click:this.onSave.bind(this),enabledConstraints:{callback:()=>this.dirty}},{type:"divider"},{template:"add",execute:{type:"url",url:"/network/firewall/rules/inet/create"}},{template:"edit",execute:{type:"url",url:"/network/firewall/rules/inet/edit/{{ _selected[0].uuid }}"}},{type:"iconButton",icon:"arrowUp",tooltip:(0,e.J)("Up"),click:this.onUp.bind(this),enabledConstraints:{minSelected:1,maxSelected:1}},{type:"iconButton",icon:"arrowDown",tooltip:(0,e.J)("Down"),click:this.onDown.bind(this),enabledConstraints:{minSelected:1,maxSelected:1}},{template:"delete",execute:{type:"request",request:{service:"Iptables",method:"deleteRule",params:{uuid:"{{ uuid }}"}}}}]}}onSave(r,a){this.rpcService.request("Iptables","setRules",a.data).subscribe(()=>{this.dirty=!1,this.notificationService.show(J.k.success,(0,e.J)("Updated firewall rules."))})}onUp(r,a){const d=a.selection.first(),c=s.findIndex(a.data,d);if(c<=0)return;const l=s.cloneDeep(a.data);s.pullAt(l,c),l.splice(c-1,0,d),this.updateRuleNumbers(l),a.updateData(l),this.dirty=!0}onDown(r,a){const d=a.selection.first(),c=s.findIndex(a.data,d);if(c+1>=a.data.length)return;const l=s.cloneDeep(a.data);s.pullAt(l,c),l.splice(c+1,0,d),this.updateRuleNumbers(l),a.updateData(l),this.dirty=!0}updateRuleNumbers(r){s.forEach(r,(a,d)=>{s.set(a,"rulenum",d)})}}return t.\u0275fac=function(r){return new(r||t)(n.Y36(x.G),n.Y36(I.g))},t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-datatable-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[g.N],encapsulation:2}),t})(),U=(()=>{class t extends m.qg{constructor(r,a){super(),this.rpcService=r,this.notificationService=a,this.config={stateId:"da278886-7c09-11ea-a477-a7d7e6d13d1d",autoReload:!1,limit:0,remoteSorting:!1,remotePaging:!1,hasSearchField:!1,columns:[{name:(0,e.J)("Direction"),prop:"chain",flexGrow:1,sortable:!1,cellTemplateName:"chip"},{name:(0,e.J)("Action"),prop:"action",flexGrow:1,sortable:!1,cellTemplateName:"chip"},{name:(0,e.J)("Source"),prop:"source",flexGrow:1,sortable:!1},{name:(0,e.J)("Port"),prop:"sport",flexGrow:1,sortable:!1},{name:(0,e.J)("Destination"),prop:"destination",flexGrow:1,sortable:!1},{name:(0,e.J)("Port"),prop:"dport",flexGrow:1,sortable:!1},{name:(0,e.J)("Protocol"),prop:"protocol",flexGrow:1,sortable:!1,cellTemplateName:"chip",cellTemplateConfig:{map:{tcp:{value:"TCP"},udp:{value:"UDP"},icmp:{value:"ICMP"},icmpv6:{value:"ICMPv6"},all:{value:(0,e.J)("All")},"!tcp":{value:(0,e.J)("Not TCP")},"!udp":{value:(0,e.J)("Not UDP")},"!icmp":{value:(0,e.J)("Not ICMP")},"!icmpv6":{value:(0,e.J)("Not ICMPv6")}}}},{name:(0,e.J)("Extra options"),prop:"extraoptions",cellTemplateName:"text",flexGrow:1,sortable:!1},{name:(0,e.J)("Tags"),prop:"comment",cellTemplateName:"chip",cellTemplateConfig:{separator:","},flexGrow:1,sortable:!0}],sorters:[{dir:"asc",prop:"rulenum"}],store:{proxy:{service:"Iptables",get:{method:"getRules6",params:{type:["userdefined"]}}}},actions:[{type:"iconButton",icon:"save",tooltip:(0,e.J)("Save"),click:this.onSave.bind(this),enabledConstraints:{callback:()=>this.dirty}},{type:"divider"},{template:"add",execute:{type:"url",url:"/network/firewall/rules/inet6/create"}},{template:"edit",execute:{type:"url",url:"/network/firewall/rules/inet6/edit/{{ _selected[0].uuid }}"}},{type:"iconButton",icon:"arrowUp",tooltip:(0,e.J)("Up"),click:this.onUp.bind(this),enabledConstraints:{minSelected:1,maxSelected:1}},{type:"iconButton",icon:"arrowDown",tooltip:(0,e.J)("Down"),click:this.onDown.bind(this),enabledConstraints:{minSelected:1,maxSelected:1}},{template:"delete",execute:{type:"request",request:{service:"Iptables",method:"deleteRule",params:{uuid:"{{ uuid }}"}}}}]}}onSave(r,a){this.rpcService.request("Iptables","setRules6",a.data).subscribe(()=>{this.dirty=!1,this.notificationService.show(J.k.success,(0,e.J)("Updated firewall rules."))})}onUp(r,a){const d=a.selection.first(),c=s.findIndex(a.data,d);if(c<=0)return;const l=s.cloneDeep(a.data);s.pullAt(l,c),l.splice(c-1,0,d),this.updateRuleNumbers(l),a.updateData(l),this.dirty=!0}onDown(r,a){const d=a.selection.first(),c=s.findIndex(a.data,d);if(c+1>=a.data.length)return;const l=s.cloneDeep(a.data);s.pullAt(l,c),l.splice(c+1,0,d),this.updateRuleNumbers(l),a.updateData(l),this.dirty=!0}updateRuleNumbers(r){s.forEach(r,(a,d)=>{s.set(a,"rulenum",d)})}}return t.\u0275fac=function(r){return new(r||t)(n.Y36(x.G),n.Y36(I.g))},t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-datatable-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[g.N],encapsulation:2}),t})();var M=i(4696);let B=(()=>{class t{constructor(){this.config={singleRoute:!1,tabs:[{url:"/network/firewall/rules/inet",label:(0,e.J)("IPv4")},{url:"/network/firewall/rules/inet6",label:(0,e.J)("IPv6")}]}}}return t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-tabs-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[M.E],encapsulation:2}),t})(),G=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getGeneralSettings"},post:{method:"setGeneralSettings"}},fields:[{type:"textInput",name:"hostname",label:(0,e.J)("Hostname"),hint:(0,e.J)("The hostname is a label that identifies the system to the network."),value:"",validators:{patternType:"hostName",required:!0}},{type:"textInput",name:"domainname",label:(0,e.J)("Domain name"),value:"",validators:{patternType:"domainName"}}],buttons:[{template:"submit"},{template:"cancel",execute:{type:"url",url:"/network"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),w=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getBondIface",params:{uuid:"{{ _routeParams.uuid }}"}},post:{method:"setBondIface",params:{wol:!1}}},fields:[{type:"confObjUuid"},{type:"select",name:"type",label:(0,e.J)("Type"),disabled:!0,submitValue:!1,value:"bond",store:{data:[["ethernet",(0,e.J)("Ethernet")],["bond",(0,e.J)("Bond")],["vlan",(0,e.J)("VLAN")],["wifi",(0,e.J)("Wi-Fi")],["bridge",(0,e.J)("Bridge")]]}},{type:"textInput",name:"devicename",label:(0,e.J)("Device"),value:"",disabled:!0,modifiers:[{type:"hidden",constraint:{operator:"falsy",arg0:{prop:"_editing"}}}]},{type:"select",name:"slaves",label:(0,e.J)("Slaves"),placeholder:(0,e.J)("Select slave devices ..."),hint:(0,e.J)("Specifies the slave devices."),multiple:!0,valueField:"devicename",textField:"description",value:[],store:{proxy:{service:"Network",get:{method:"enumerateBondSlaves",params:{uuid:"{{ _routeParams.uuid | default(newconfobjuuid) }}",unused:!0}}},sorters:[{dir:"asc",prop:"devicename"}]},validators:{required:!0,custom:[{constraint:{operator:">=",arg0:{operator:"length",arg0:{prop:"slaves"}},arg1:1},errorData:(0,e.J)("At least one network interface is required.")}]}},{type:"select",name:"bondmode",label:(0,e.J)("Mode"),value:1,store:{data:[[0,"balance-rr"],[1,"active-backup"],[2,"balance-xor"],[3,"broadcast"],[4,"802.3ad"],[5,"balance-tlb"],[6,"balance-alb"]]},validators:{required:!0}},{type:"select",name:"bondtransmithashpolicy",label:(0,e.J)("Transmit Hash Policy"),value:"layer2",store:{data:[["layer2","layer2"],["layer2+3","layer2+3"],["layer3+4","layer3+4"],["encap2+3","encap2+3"],["encap3+4","encap3+4"]]},modifiers:[{type:"enabled",constraint:{operator:"in",arg0:{prop:"bondmode"},arg1:[2,4,5]}}]},{type:"textInput",name:"bondprimary",label:(0,e.J)("Primary"),hint:(0,e.J)("Specifies which slave is the primary device."),value:"",modifiers:[{type:"value",typeConfig:"{{ slaves | get(0) }}",constraint:{operator:"and",arg0:{operator:"in",arg0:{prop:"bondmode"},arg1:[1,5,6]},arg1:{operator:"and",arg0:{operator:"notEmpty",arg0:{prop:"slaves"}},arg1:{operator:"empty",arg0:{prop:"bondprimary"}}}}},{type:"value",typeConfig:"",constraint:{operator:"not",arg0:{operator:"in",arg0:{prop:"bondmode"},arg1:[1,5,6]}}},{type:"enabled",constraint:{operator:"in",arg0:{prop:"bondmode"},arg1:[1,5,6]}}],validators:{requiredIf:{operator:"in",arg0:{prop:"bondmode"},arg1:[1,5,6]},custom:[{constraint:{operator:"if",arg0:{operator:"and",arg0:{operator:"notEmpty",arg0:{prop:"slaves"}},arg1:{operator:"in",arg0:{prop:"bondmode"},arg1:[1,5,6]}},arg1:{operator:"and",arg0:{operator:"notEmpty",arg0:{prop:"bondprimary"}},arg1:{operator:"in",arg0:{prop:"bondprimary"},arg1:{prop:"slaves"}}}},errorData:(0,e.J)('The value must be on of the slave network interfaces {{ slaves | join(", ") }}.')},{constraint:{operator:"if",arg0:{operator:"and",arg0:{operator:"empty",arg0:{prop:"slaves"}},arg1:{operator:"in",arg0:{prop:"bondmode"},arg1:[1,5,6]}},arg1:{operator:"in",arg0:{prop:"bondprimary"},arg1:{prop:"slaves"}}},errorData:(0,e.J)("The value must be on of the slave network interfaces.")}]}},{type:"numberInput",name:"bondmiimon",label:(0,e.J)("MII monitoring frequency"),hint:(0,e.J)("Specifies the MII link monitoring frequency in milliseconds."),value:100,validators:{min:0,patternType:"integer"}},{type:"numberInput",name:"bonddowndelay",label:(0,e.J)("Down delay"),hint:(0,e.J)("Specifies the time, in milliseconds, to wait before disabling a slave after a link failure has been detected."),value:200,validators:{min:0,patternType:"integer"}},{type:"numberInput",name:"bondupdelay",label:(0,e.J)("Up delay"),hint:(0,e.J)("Specifies the time, in milliseconds, to wait before enabling a slave after a link recovery has been detected."),value:200,validators:{min:0,patternType:"integer"}},{type:"tagInput",name:"comment",label:(0,e.J)("Tags"),value:""},{type:"divider",title:(0,e.J)("IPv4")},{type:"select",name:"method",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv4",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"textInput",name:"netmask",label:(0,e.J)("Netmask"),value:"",validators:{patternType:"netmask",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv4"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric",label:(0,e.J)("Metric"),value:0,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("IPv6")},{type:"select",name:"method6",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["auto",(0,e.J)("Auto")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address6",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv6",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"numberInput",name:"netmask6",label:(0,e.J)("Prefix length"),value:64,validators:{min:0,max:128,patternType:"integer",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway6",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv6"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric6",label:(0,e.J)("Metric"),value:1,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("Advanced settings")},{type:"textInput",name:"dnsnameservers",label:(0,e.J)("DNS servers"),hint:(0,e.J)("IP addresses of domain name servers used to resolve host names."),value:"",validators:{patternType:"ipList"}},{type:"textInput",name:"dnssearch",label:(0,e.J)("Search domains"),hint:(0,e.J)("Domains used when resolving host names."),value:"",validators:{patternType:"domainNameList"}},{type:"numberInput",name:"mtu",label:(0,e.J)("MTU"),hint:(0,e.J)("The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value."),value:0,validators:{min:0,max:65535,patternType:"integer"}}],buttons:[{template:"submit",execute:{type:"url",url:"/network/interfaces"}},{template:"cancel",execute:{type:"url",url:"/network/interfaces"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),P=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getBridgeIface",params:{uuid:"{{ _routeParams.uuid }}"}},post:{method:"setBridgeIface",params:{wol:!1}}},fields:[{type:"confObjUuid"},{type:"select",name:"type",label:(0,e.J)("Type"),disabled:!0,submitValue:!1,value:"bridge",store:{data:[["ethernet",(0,e.J)("Ethernet")],["bond",(0,e.J)("Bond")],["vlan",(0,e.J)("VLAN")],["wifi",(0,e.J)("Wi-Fi")],["bridge",(0,e.J)("Bridge")]]}},{type:"textInput",name:"devicename",label:(0,e.J)("Device"),value:"",disabled:!0,modifiers:[{type:"hidden",constraint:{operator:"falsy",arg0:{prop:"_editing"}}}]},{type:"select",name:"slaves",label:(0,e.J)("Interfaces"),placeholder:(0,e.J)("Select interface devices ..."),hint:(0,e.J)("Specifies the interface devices."),multiple:!0,valueField:"devicename",textField:"description",value:[],store:{proxy:{service:"Network",get:{method:"enumerateBridgeSlaves",params:{uuid:"{{ _routeParams.uuid | default(newconfobjuuid) }}",unused:!0}}},sorters:[{dir:"asc",prop:"devicename"}]}},{type:"tagInput",name:"comment",label:(0,e.J)("Tags"),value:""},{type:"divider",title:(0,e.J)("IPv4")},{type:"select",name:"method",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv4",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"textInput",name:"netmask",label:(0,e.J)("Netmask"),value:"",validators:{patternType:"netmask",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv4"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric",label:(0,e.J)("Metric"),value:0,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("IPv6")},{type:"select",name:"method6",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["auto",(0,e.J)("Auto")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address6",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv6",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"numberInput",name:"netmask6",label:(0,e.J)("Prefix length"),value:64,validators:{min:0,max:128,patternType:"integer",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway6",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv6"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric6",label:(0,e.J)("Metric"),value:1,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("Advanced settings")},{type:"textInput",name:"dnsnameservers",label:(0,e.J)("DNS servers"),hint:(0,e.J)("IP addresses of domain name servers used to resolve host names."),value:"",validators:{patternType:"ipList"}},{type:"textInput",name:"dnssearch",label:(0,e.J)("Search domains"),hint:(0,e.J)("Domains used when resolving host names."),value:"",validators:{patternType:"domainNameList"}},{type:"numberInput",name:"mtu",label:(0,e.J)("MTU"),hint:(0,e.J)("The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value."),value:0,validators:{min:0,max:65535,patternType:"integer"}}],buttons:[{template:"submit",execute:{type:"url",url:"/network/interfaces"}},{template:"cancel",execute:{type:"url",url:"/network/interfaces"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),E=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={stateId:"1c782151-4393-493b-9767-257620370fb2",autoReload:!1,remoteSorting:!0,remotePaging:!0,hasSearchField:!0,rowEnumFmt:"{{ devicename }}",columns:[{name:(0,e.J)("Device"),prop:"devicename",flexGrow:1,sortable:!0},{name:(0,e.J)("Type"),prop:"type",flexGrow:1,sortable:!0,hidden:!0,cellTemplateName:"chip",cellTemplateConfig:{map:{ethernet:{value:(0,e.J)("Ethernet")},bond:{value:(0,e.J)("Bond")},vlan:{value:(0,e.J)("VLAN")},wifi:{value:(0,e.J)("Wi-Fi")},bridge:{value:(0,e.J)("Bridge")}}}},{name:(0,e.J)("Method"),prop:"method",flexGrow:1,sortable:!0,cellTemplateName:"template",cellTemplateConfig:'IPv4: {{ method | replace("manual", "Disabled") | replace("dhcp", "DHCP") | replace("auto", "Auto") | replace("static", "Static") | translate }}<br>IPv6: {{ method6 | replace("manual", "Disabled") | replace("dhcp", "DHCP") | replace("auto", "Auto") | replace("static", "Static") | translate }}'},{name:(0,e.J)("Address"),prop:"address",flexGrow:1,sortable:!0,cellTemplateName:"template",cellTemplateConfig:'IPv4: {{ address | default("-", true) }}<br>IPv6: {{ address6 | default("-", true) }}'},{name:(0,e.J)("Netmask"),prop:"netmask",flexGrow:1,sortable:!0,cellTemplateName:"template",cellTemplateConfig:'IPv4: {{ netmask | default("-", true) }}<br>IPv6: {{ netmask6 | default("-", true) }}'},{name:(0,e.J)("Gateway"),prop:"gateway",flexGrow:1,sortable:!0,cellTemplateName:"template",cellTemplateConfig:'IPv4: {{ gateway | default("-", true) }}<br>IPv6: {{ gateway6 | default("-", true) }}'},{name:(0,e.J)("MTU"),prop:"mtu",flexGrow:1,sortable:!0},{name:(0,e.J)("WOL"),prop:"wol",flexGrow:1,sortable:!0,cellTemplateName:"checkIcon"},{name:(0,e.J)("Tags"),prop:"comment",cellTemplateName:"chip",cellTemplateConfig:{separator:","},flexGrow:1,sortable:!0}],sorters:[{dir:"asc",prop:"devicename"}],store:{proxy:{service:"Network",get:{method:"getInterfaceList"}}},actions:[{type:"menu",icon:"add",tooltip:(0,e.J)("Create"),actions:[{text:(0,e.J)("Ethernet"),icon:"mdi:ethernet",execute:{type:"url",url:"/network/interfaces/ethernet/create"}},{text:(0,e.J)("Wi-Fi"),icon:"mdi:wifi",execute:{type:"url",url:"/network/interfaces/wifi/create"}},{text:(0,e.J)("Bond"),icon:"mdi:link-variant",execute:{type:"url",url:"/network/interfaces/bond/create"}},{text:(0,e.J)("VLAN"),icon:"mdi:lan",execute:{type:"url",url:"/network/interfaces/vlan/create"}},{text:(0,e.J)("Bridge"),icon:"mdi:bridge",execute:{type:"url",url:"/network/interfaces/bridge/create"}}]},{template:"edit",execute:{type:"url",url:"/network/interfaces/{{ _selected[0].type }}/edit/{{ _selected[0].uuid }}"}},{type:"iconButton",icon:"details",tooltip:(0,e.J)("Show details"),enabledConstraints:{minSelected:1,maxSelected:1},execute:{type:"url",url:"/network/interfaces/details/{{ _selected[0].devicename }}"}},{type:"iconButton",icon:"search",tooltip:(0,e.J)("Identify"),enabledConstraints:{minSelected:1,maxSelected:1,constraint:[{operator:"eq",arg0:{prop:"type"},arg1:"ethernet"}]},execute:{type:"formDialog",formDialog:{title:(0,e.J)("Identify network interface"),fields:[{type:"textInput",name:"devicename",label:(0,e.J)("Name"),readonly:!0,value:"{{ _selected[0].devicename }}"},{type:"numberInput",name:"seconds",label:(0,e.J)("Seconds"),hint:(0,e.J)("Length of time in seconds to blink one or more LEDs on the specific ethernet port."),validators:{required:!0,min:1,max:30,patternType:"integer"},value:10}],buttons:{submit:{text:(0,e.J)("Start"),execute:{type:"request",request:{service:"Network",method:"identify",task:!0,progressMessage:(0,e.J)("Please wait, identifying network device ...")}}}}}}},{template:"delete",execute:{type:"request",request:{service:"Network",method:"deleteInterface",params:{uuid:"{{ uuid }}"}}}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:2,vars:1,consts:[[3,"config"],["page",""]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-datatable-page",0,1),2&r&&n.Q6J("config",a.config)},dependencies:[g.N],encapsulation:2}),t})(),R=(()=>{class t{constructor(){this.config={request:{service:"Network",get:{method:"getInformation",params:{devicename:"{{ _routeParams.devicename }}"},transform:{prefix:'{{ prefix | replace("-1", "") }}',prefix6:'{{ prefix6 | replace("-1", "") }}'}}},fields:[{type:"select",name:"type",label:(0,e.J)("Type"),disabled:!0,submitValue:!1,value:"bond",store:{data:[["ethernet",(0,e.J)("Ethernet")],["bond",(0,e.J)("Bond")],["vlan",(0,e.J)("VLAN")],["wifi",(0,e.J)("Wi-Fi")],["bridge",(0,e.J)("Bridge")]]}},{type:"textInput",name:"devicename",label:(0,e.J)("Device"),disabled:!0},{type:"textInput",name:"ether",label:(0,e.J)("Hardware Address"),disabled:!0,hasCopyToClipboardButton:!0},{type:"textInput",name:"mtu",label:(0,e.J)("MTU"),disabled:!0},{type:"textInput",name:"state",label:(0,e.J)("State"),disabled:!0},{type:"divider",title:(0,e.J)("IPv4")},{type:"textInput",name:"address",label:(0,e.J)("Address"),disabled:!0,hasCopyToClipboardButton:!0},{type:"textInput",name:"prefix",label:(0,e.J)("Prefix length"),disabled:!0},{type:"textInput",name:"netmask",label:(0,e.J)("Prefix address"),disabled:!0},{type:"textInput",name:"gateway",label:(0,e.J)("Gateway"),disabled:!0,hasCopyToClipboardButton:!0},{type:"divider",title:(0,e.J)("IPv6")},{type:"textInput",name:"address6",label:(0,e.J)("Address"),disabled:!0,hasCopyToClipboardButton:!0},{type:"textInput",name:"prefix6",label:(0,e.J)("Prefix length"),disabled:!0},{type:"textInput",name:"netmask6",label:(0,e.J)("Prefix address"),disabled:!0},{type:"textInput",name:"gateway6",label:(0,e.J)("Gateway"),disabled:!0,hasCopyToClipboardButton:!0}]}}}return t.\u0275fac=function(r){return new(r||t)},t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),T=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getEthernetIface",params:{uuid:"{{ _routeParams.uuid }}"}},post:{method:"setEthernetIface"}},fields:[{type:"confObjUuid"},{type:"select",name:"type",label:(0,e.J)("Type"),disabled:!0,submitValue:!1,value:"ethernet",store:{data:[["ethernet",(0,e.J)("Ethernet")],["bond",(0,e.J)("Bond")],["vlan",(0,e.J)("VLAN")],["wifi",(0,e.J)("Wi-Fi")],["bridge",(0,e.J)("Bridge")]]}},{type:"select",name:"devicename",label:(0,e.J)("Device"),placeholder:(0,e.J)("Select a device ..."),textField:"description",valueField:"devicename",store:{proxy:{service:"Network",get:{method:'{{ "enumerateDevices" if _routeConfig.data.editing else "getEthernetCandidates" }}'}},sorters:[{dir:"asc",prop:"devicename"}]},value:"",disabled:"{{ _routeConfig.data.editing | toboolean }}",validators:{required:!0}},{type:"tagInput",name:"comment",label:(0,e.J)("Tags"),value:""},{type:"divider",title:(0,e.J)("IPv4")},{type:"select",name:"method",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv4",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"textInput",name:"netmask",label:(0,e.J)("Netmask"),value:"",validators:{patternType:"netmask",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv4"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric",label:(0,e.J)("Metric"),value:0,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("IPv6")},{type:"select",name:"method6",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["auto",(0,e.J)("Auto")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address6",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv6",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"numberInput",name:"netmask6",label:(0,e.J)("Prefix length"),value:64,validators:{min:0,max:128,patternType:"integer",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway6",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv6"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric6",label:(0,e.J)("Metric"),value:1,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("Advanced settings")},{type:"textInput",name:"altmacaddress",label:(0,e.J)("MAC address"),hint:(0,e.J)("Force a specific MAC address on this interface."),value:"",validators:{patternType:"macAddress"}},{type:"textInput",name:"dnsnameservers",label:(0,e.J)("DNS servers"),hint:(0,e.J)("IP addresses of domain name servers used to resolve host names."),value:"",validators:{patternType:"ipList"}},{type:"textInput",name:"dnssearch",label:(0,e.J)("Search domains"),hint:(0,e.J)("Domains used when resolving host names."),value:"",validators:{patternType:"domainNameList"}},{type:"numberInput",name:"mtu",label:(0,e.J)("MTU"),hint:(0,e.J)("The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value."),value:0,validators:{min:0,max:65535,patternType:"integer"}},{type:"checkbox",name:"wol",label:(0,e.J)("Wake-on-LAN"),value:!1}],buttons:[{template:"submit",execute:{type:"url",url:"/network/interfaces"}},{template:"cancel",execute:{type:"url",url:"/network/interfaces"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),C=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getVlanIface",params:{uuid:"{{ _routeParams.uuid }}"}},post:{method:"setVlanIface",params:{wol:!1}}},fields:[{type:"confObjUuid"},{type:"select",name:"type",label:(0,e.J)("Type"),disabled:!0,submitValue:!1,value:"vlan",store:{data:[["ethernet",(0,e.J)("Ethernet")],["bond",(0,e.J)("Bond")],["vlan",(0,e.J)("VLAN")],["wifi",(0,e.J)("Wi-Fi")],["bridge",(0,e.J)("Bridge")]]}},{type:"textInput",name:"devicename",label:(0,e.J)("Device"),value:"",disabled:!0,modifiers:[{type:"hidden",constraint:{operator:"falsy",arg0:{prop:"_editing"}}}]},{type:"select",name:"vlanrawdevice",label:(0,e.J)("Parent device"),placeholder:(0,e.J)("Select a device ..."),textField:"description",valueField:"devicename",store:{proxy:{service:"Network",get:{method:"getVlanCandidates"}},sorters:[{dir:"asc",prop:"devicename"}]},value:"",disabled:"{{ _routeConfig.data.editing | toboolean }}",validators:{required:!0}},{type:"numberInput",name:"vlanid",label:(0,e.J)("VLAN id"),value:1,validators:{required:!0,min:1,max:4095,patternType:"integer"},disabled:"{{ _routeConfig.data.editing | toboolean }}"},{type:"tagInput",name:"comment",label:(0,e.J)("Tags"),value:""},{type:"divider",title:(0,e.J)("IPv4")},{type:"select",name:"method",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv4",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"textInput",name:"netmask",label:(0,e.J)("Netmask"),value:"",validators:{patternType:"netmask",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv4"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric",label:(0,e.J)("Metric"),value:0,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("IPv6")},{type:"select",name:"method6",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["auto",(0,e.J)("Auto")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address6",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv6",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"numberInput",name:"netmask6",label:(0,e.J)("Prefix length"),value:64,validators:{min:0,max:128,patternType:"integer",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway6",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv6"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric6",label:(0,e.J)("Metric"),value:1,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("Advanced settings")},{type:"textInput",name:"altmacaddress",label:(0,e.J)("MAC address"),hint:(0,e.J)("Force a specific MAC address on this interface."),value:"",validators:{patternType:"macAddress"}},{type:"textInput",name:"dnsnameservers",label:(0,e.J)("DNS servers"),hint:(0,e.J)("IP addresses of domain name servers used to resolve host names."),value:"",validators:{patternType:"ipList"}},{type:"textInput",name:"dnssearch",label:(0,e.J)("Search domains"),hint:(0,e.J)("Domains used when resolving host names."),value:"",validators:{patternType:"domainNameList"}},{type:"numberInput",name:"mtu",label:(0,e.J)("MTU"),hint:(0,e.J)("The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value."),value:0,validators:{min:0,max:65535,patternType:"integer"}}],buttons:[{template:"submit",execute:{type:"url",url:"/network/interfaces"}},{template:"cancel",execute:{type:"url",url:"/network/interfaces"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),D=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getWirelessIface",params:{uuid:"{{ _routeParams.uuid }}"}},post:{method:"setWirelessIface"}},fields:[{type:"confObjUuid"},{type:"select",name:"type",label:(0,e.J)("Type"),disabled:!0,submitValue:!1,value:"wifi",store:{data:[["ethernet",(0,e.J)("Ethernet")],["bond",(0,e.J)("Bond")],["vlan",(0,e.J)("VLAN")],["wifi",(0,e.J)("Wi-Fi")],["bridge",(0,e.J)("Bridge")]]}},{type:"select",name:"devicename",label:(0,e.J)("Device"),placeholder:(0,e.J)("Select a device ..."),textField:"description",valueField:"devicename",store:{proxy:{service:"Network",get:{method:'{{ "enumerateDevices" if _routeConfig.data.editing else "getWirelessCandidates" }}'}},sorters:[{dir:"asc",prop:"devicename"}]},value:"",disabled:"{{ _routeConfig.data.editing | toboolean }}",validators:{required:!0}},{type:"textInput",name:"wpassid",label:(0,e.J)("SSID"),value:"",validators:{required:!0}},{type:"select",name:"keymanagement",label:(0,e.J)("Security"),value:"psk",store:{data:[["psk",(0,e.J)("WPA2-Personal")],["sae",(0,e.J)("WPA3-Personal")]]},validators:{required:!0}},{type:"passwordInput",name:"wpapsk",label:(0,e.J)("Password"),value:"",autocomplete:"new-password",validators:{required:!0}},{type:"checkbox",name:"hidden",label:(0,e.J)("Connect to hidden network"),hint:(0,e.J)("Connect even if the network is not broadcasting its SSID name."),value:!1},{type:"tagInput",name:"comment",label:(0,e.J)("Tags"),value:""},{type:"divider",title:(0,e.J)("IPv4")},{type:"select",name:"method",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv4",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"textInput",name:"netmask",label:(0,e.J)("Netmask"),value:"",validators:{patternType:"netmask",requiredIf:{operator:"eq",arg0:{prop:"method"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv4"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric",label:(0,e.J)("Metric"),value:0,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("IPv6")},{type:"select",name:"method6",label:(0,e.J)("Method"),value:"manual",store:{data:[["manual",(0,e.J)("Disabled")],["dhcp",(0,e.J)("DHCP")],["auto",(0,e.J)("Auto")],["static",(0,e.J)("Static")]]},validators:{required:!0}},{type:"textInput",name:"address6",label:(0,e.J)("Address"),value:"",validators:{patternType:"ipv6",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"numberInput",name:"netmask6",label:(0,e.J)("Prefix length"),value:64,validators:{min:0,max:128,patternType:"integer",requiredIf:{operator:"eq",arg0:{prop:"method6"},arg1:"static"}},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]},{type:"container",fields:[{type:"textInput",name:"gateway6",label:(0,e.J)("Gateway"),value:"",validators:{patternType:"ipv6"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}],flex:75},{type:"numberInput",name:"routemetric6",label:(0,e.J)("Metric"),value:1,validators:{min:0,max:65535,patternType:"integer"},modifiers:[{type:"disabled",constraint:{operator:"ne",arg0:{prop:"method6"},arg1:"static"}}]}]},{type:"divider",title:(0,e.J)("Advanced settings")},{type:"textInput",name:"altmacaddress",label:(0,e.J)("MAC address"),hint:(0,e.J)("Force a specific MAC address on this interface."),value:"",validators:{patternType:"macAddress"}},{type:"textInput",name:"dnsnameservers",label:(0,e.J)("DNS servers"),hint:(0,e.J)("IP addresses of domain name servers used to resolve host names."),value:"",validators:{patternType:"ipList"}},{type:"textInput",name:"dnssearch",label:(0,e.J)("Search domains"),hint:(0,e.J)("Domains used when resolving host names."),value:"",validators:{patternType:"domainNameList"}},{type:"numberInput",name:"mtu",label:(0,e.J)("MTU"),hint:(0,e.J)("The maximum transmission unit in bytes to set for the device. Set to 0 to use the default value."),value:0,validators:{min:0,max:65535,patternType:"integer"}},{type:"checkbox",name:"wol",label:(0,e.J)("Wake-on-LAN"),value:!1}],buttons:[{template:"submit",execute:{type:"url",url:"/network/interfaces"}},{template:"cancel",execute:{type:"url",url:"/network/interfaces"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})(),L=(()=>{class t extends m.Fy{constructor(){super(...arguments),this.config={request:{service:"Network",get:{method:"getProxy"},post:{method:"setProxy"}},fields:[{type:"paragraph",title:(0,e.J)("HTTP-Proxy")},{type:"checkbox",name:"httpenable",label:(0,e.J)("Enabled"),value:!1},{type:"textInput",name:"httphost",label:(0,e.J)("Host"),value:"",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpenable"}}}],validators:{requiredIf:{operator:"truthy",arg0:{prop:"httpenable"}}}},{type:"numberInput",name:"httpport",label:(0,e.J)("Port"),value:8080,modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpenable"}}}],validators:{patternType:"port",requiredIf:{operator:"truthy",arg0:{prop:"httpenable"}},min:1,max:65535}},{type:"textInput",name:"httpusername",label:(0,e.J)("User name"),value:"",autocomplete:"off",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpenable"}}}],validators:{patternType:"userName"}},{type:"passwordInput",name:"httppassword",label:(0,e.J)("Password"),value:"",autocomplete:"new-password",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpenable"}}}]},{type:"divider",title:(0,e.J)("HTTPS-Proxy")},{type:"checkbox",name:"httpsenable",label:(0,e.J)("Enabled"),value:!1},{type:"textInput",name:"httpshost",label:(0,e.J)("Host"),value:"",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpsenable"}}}],validators:{requiredIf:{operator:"truthy",arg0:{prop:"httpsenable"}}}},{type:"numberInput",name:"httpsport",label:(0,e.J)("Port"),value:8080,modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpsenable"}}}],validators:{patternType:"port",requiredIf:{operator:"truthy",arg0:{prop:"httpsenable"}},min:1,max:65535}},{type:"textInput",name:"httpsusername",label:(0,e.J)("User name"),value:"",autocomplete:"off",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpsenable"}}}],validators:{patternType:"userName"}},{type:"passwordInput",name:"httpspassword",label:(0,e.J)("Password"),value:"",autocomplete:"new-password",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"httpsenable"}}}]},{type:"divider",title:(0,e.J)("FTP-Proxy")},{type:"checkbox",name:"ftpenable",label:(0,e.J)("Enabled"),value:!1},{type:"textInput",name:"ftphost",label:(0,e.J)("Host"),value:"",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"ftpenable"}}}],validators:{requiredIf:{operator:"truthy",arg0:{prop:"ftpenable"}}}},{type:"numberInput",name:"ftpport",label:(0,e.J)("Port"),value:8080,modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"ftpenable"}}}],validators:{patternType:"port",requiredIf:{operator:"truthy",arg0:{prop:"ftpenable"}},min:1,max:65535}},{type:"textInput",name:"ftpusername",label:(0,e.J)("User name"),value:"",autocomplete:"off",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"ftpenable"}}}],validators:{patternType:"userName"}},{type:"passwordInput",name:"ftppassword",label:(0,e.J)("Password"),value:"",autocomplete:"new-password",modifiers:[{type:"enabled",constraint:{operator:"truthy",arg0:{prop:"ftpenable"}}}]}],buttons:[{template:"submit"},{template:"cancel",execute:{type:"url",url:"/network"}}]}}}return t.\u0275fac=function(){let o;return function(a){return(o||(o=n.n5z(t)))(a||t)}}(),t.\u0275cmp=n.Xpm({type:t,selectors:[["ng-component"]],features:[n.qOj],decls:1,vars:1,consts:[[3,"config"]],template:function(r,a){1&r&&n._UZ(0,"omv-intuition-form-page",0),2&r&&n.Q6J("config",a.config)},dependencies:[u.g],encapsulation:2}),t})();var p=i(1885);const v=[{path:"",component:h.Z},{path:"general",component:G,canDeactivate:[p.e],data:{title:(0,e.J)("General"),notificationTitle:(0,e.J)("Updated network settings."),editing:!0}},{path:"interfaces",data:{title:(0,e.J)("Interfaces")},children:[{path:"",component:E},{path:"details/:devicename",component:R,data:{title:(0,e.J)("Details"),editing:!0}},{path:"ethernet/create",component:T,canDeactivate:[p.e],data:{title:(0,e.J)("Create"),editing:!1,notificationTitle:(0,e.J)("Created wired network connection.")}},{path:"ethernet/edit/:uuid",component:T,canDeactivate:[p.e],data:{title:(0,e.J)("Edit"),editing:!0,notificationTitle:(0,e.J)('Updated wired network connection "{{ devicename }}".')}},{path:"wifi/create",component:D,canDeactivate:[p.e],data:{title:(0,e.J)("Create"),editing:!1,notificationTitle:(0,e.J)("Created wireless network connection.")}},{path:"wifi/edit/:uuid",component:D,canDeactivate:[p.e],data:{title:(0,e.J)("Edit"),editing:!0,notificationTitle:(0,e.J)('Updated wireless network connection "{{ devicename }}".')}},{path:"bond/create",component:w,canDeactivate:[p.e],data:{title:(0,e.J)("Create"),editing:!1,notificationTitle:(0,e.J)("Created bond network connection.")}},{path:"bond/edit/:uuid",component:w,canDeactivate:[p.e],data:{title:(0,e.J)("Edit"),editing:!0,notificationTitle:(0,e.J)('Updated bond network connection "{{ devicename }}".')}},{path:"vlan/create",component:C,canDeactivate:[p.e],data:{title:(0,e.J)("Create"),editing:!1,notificationTitle:(0,e.J)("Created VLAN network connection.")}},{path:"vlan/edit/:uuid",component:C,canDeactivate:[p.e],data:{title:(0,e.J)("Edit"),editing:!0,notificationTitle:(0,e.J)('Updated VLAN network connection "{{ devicename }}".')}},{path:"bridge/create",component:P,canDeactivate:[p.e],data:{title:(0,e.J)("Create"),editing:!1,notificationTitle:(0,e.J)("Created bridge network connection.")}},{path:"bridge/edit/:uuid",component:P,canDeactivate:[p.e],data:{title:(0,e.J)("Edit"),editing:!0,notificationTitle:(0,e.J)('Updated bridge network connection "{{ devicename }}".')}}]},{path:"proxy",component:L,canDeactivate:[p.e],data:{title:(0,e.J)("Proxy"),notificationTitle:(0,e.J)("Updated proxy settings."),editing:!0}},{path:"firewall",data:{title:(0,e.J)("Firewall")},children:[{path:"",component:h.Z},{path:"rules",data:{title:(0,e.J)("Rules")},children:[{path:"",component:B,children:[{path:"",redirectTo:"inet",pathMatch:"full"},{path:"inet",component:A,canDeactivate:[p.e]},{path:"inet6",component:U,canDeactivate:[p.e]}]},{path:":family/create",component:b,canDeactivate:[p.e],data:{title:(0,e.J)("Create"),editing:!1,notificationTitle:(0,e.J)("Created firewall rule.")}},{path:":family/edit/:uuid",component:b,canDeactivate:[p.e],data:{title:(0,e.J)("Edit"),editing:!0,notificationTitle:(0,e.J)("Updated firewall rule.")}}]}]}];let V=(()=>{class t{}return t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=n.oAB({type:t}),t.\u0275inj=n.cJS({providers:[{provide:f.Z6,multi:!0,useFactory:o=>(o.inject("network",v),v),deps:[q.o]}],imports:[f.Bz.forChild(v),f.Bz]}),t})();var j=i(9950);let O=(()=>{class t{}return t.\u0275fac=function(r){return new(r||t)},t.\u0275mod=n.oAB({type:t}),t.\u0275inj=n.cJS({imports:[k.ez,N.I,S.q,j.m,V,F.y4]}),t})()}}]);